generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String              @id @default(uuid())
  name      String
  email     String              @unique
  password  String
  comments  Comment[]
  taskStatuses UserTaskStatus[]
  activeSprints UserActiveSprint[]
  createdAt DateTime            @default(now())
  updatedAt DateTime
  changePassword DateTime
}

model Sprint {
  id        String     @id @default(uuid())
  title     String
  tasks     Task[]
  activeUsers UserActiveSprint[]
}

model UserActiveSprint {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  sprint    Sprint   @relation(fields: [sprintId], references: [id])
  userId    String
  sprintId  String

  @@unique([userId, sprintId]) // 1 пользователь — 1 активный спринт
}

model Task {
  id          String     @id @default(uuid())
  title       String
  description String
  column      KanbanColumn @relation(fields: [columnId], references: [id])
  columnId    String

  sprint      Sprint     @relation(fields: [sprintId], references: [id])
  sprintId    String

  progress    Int        @default(0) // 0-100
  difficulty  KanbanDifficulty
  topics      String[]   // строковые темы

  dueDate     DateTime?  // дедлайн
  done        Boolean    @default(false)

  subtasksCount Int?     // общее число подзадач
  subtasksDone  Int?     // выполнено подзадач

  attachments  Attachment[]
  comments     Comment[]
  taskStatuses UserTaskStatus[]
}

model KanbanColumn {
  id    String @id
  title String
  tasks Task[]
}

enum KanbanDifficulty {
  EASY
  MEDIUM
  HARD
}

model Attachment {
  id      String @id @default(uuid())
  fileUrl String
  task    Task   @relation(fields: [taskId], references: [id])
  taskId  String
}

model Comment {
  id      String @id @default(uuid())
  text    String
  task    Task   @relation(fields: [taskId], references: [id])
  taskId  String
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  createdAt DateTime @default(now())
}

model UserTaskStatus {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  task      Task     @relation(fields: [taskId], references: [id])
  userId    String
  taskId    String
  status    TaskStatus

  @@unique([userId, taskId]) // Уникальный статус на пару user-task
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}
