import { prismaService } from './db.js';
import * as fs from 'fs';
import * as path from 'path';

const usersPath = path.resolve(__dirname, '../../bot-data/data/users.json');
const coursesPath = path.resolve(__dirname, '../../bot-data/data/courses.json');
const sprintsPath = path.resolve(__dirname, '../../bot-data/data/sprints.json');
const kanbanColumnsPath = path.resolve(
  __dirname,
  '../../bot-data/data/kanbanColumns.json'
);
const tasksPath = path.resolve(__dirname, '../../bot-data/data/tasks.json');
const userActiveSprintsPath = path.resolve(
  __dirname,
  '../../bot-data/data/userActiveSprints.json'
);
const userTaskStatusesPath = path.resolve(
  __dirname,
  '../../bot-data/data/userTaskStatuses.json'
);

const users = require(usersPath);
const courses = require(coursesPath);
const sprints = require(sprintsPath);
const kanbanColumns = require(kanbanColumnsPath);
const tasks = require(tasksPath);
const userActiveSprints = require(userActiveSprintsPath);
const userTaskStatuses = require(userTaskStatusesPath);

const seed = async () => {
  console.log(`\nPRISMA: üåæ –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ—Å–µ–≤ –¥–∞–Ω–Ω—ã—Ö...`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
  const files = [
    { path: usersPath, name: 'users' },
    { path: coursesPath, name: 'courses' },
    { path: sprintsPath, name: 'sprints' },
    { path: kanbanColumnsPath, name: 'kanbanColumns' },
    { path: tasksPath, name: 'tasks' },
    { path: userActiveSprintsPath, name: 'userActiveSprints' },
    { path: userTaskStatusesPath, name: 'userTaskStatuses' },
  ];

  for (const file of files) {
    if (!fs.existsSync(file.path)) {
      console.log(`PRISMA: ‚ö†Ô∏è –§–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ ${file.name} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }
  }

  // –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  await prismaService.clearDatabase();

  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  await prismaService.loadUsers(users);

  // –î–æ–±–∞–≤–ª—è–µ–º –∫—É—Ä—Å—ã
  await prismaService.loadCourses(courses);

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø—Ä–∏–Ω—Ç—ã
  await prismaService.loadSprints(sprints);

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫–∏ –ö–∞–Ω–±–∞–Ω
  await prismaService.loadKanbanColumns(kanbanColumns);

  // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á–∏
  await prismaService.loadTasks(tasks);

  // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–ø—Ä–∏–Ω—Ç—ã
  await prismaService.loadUserActiveSprints(userActiveSprints);

  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –∑–∞–¥–∞—á
  await prismaService.loadUserTaskStatuses(userTaskStatuses);

  // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  await prismaService.getStats();

  console.log('PRISMA: üéâ –ü–æ—Å–µ–≤ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!');
};

export default seed;
