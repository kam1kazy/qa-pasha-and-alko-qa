networks:
    development:

volumes:
    postgres_data:

services:
    db:
        build:
            context: ./db
        image: postgres:17.4-alpine
        container_name: postgres
        environment:
            POSTGRES_DB: ${DB_NAME}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        command:
            - 'postgres'
            - '-c'
            - 'max_connections=50'
            - '-c'
            - 'shared_buffers=1GB'
            - '-c'
            - 'effective_cache_size=4GB'
            - '-c'
            - 'work_mem=16MB'
            - '-c'
            - 'maintenance_work_mem=512MB'
            - '-c'
            - 'random_page_cost=1.1'
            - '-c'
            - 'temp_file_limit=10GB'
            - '-c'
            - 'log_min_duration_statement=200ms'
            - '-c'
            - 'idle_in_transaction_session_timeout=10s'
            - '-c'
            - 'lock_timeout=1s'
            - '-c'
            - 'statement_timeout=60s'
        ports:
            - '${DB_PORT}:${DB_PORT}'
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - development
        env_file:
            - ./server/.env

    nginx:
        image: nginx:stable-alpine
        container_name: nginx
        environment:
            - SERVER_IP=${SERVER_IP}
            - ALLOWED_HOME_IP=${ALLOWED_HOME_IP}
            - ALLOWED_MOBILE_IP=${ALLOWED_MOBILE_IP}
            - SITE_URL=${SITE_URL}
        ports:
            - '80:80'
            - '443:443'
        volumes:
            #      - ./nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx.template.conf:/etc/nginx/nginx.template.conf:ro
            #- ./.htpasswd:/etc/nginx/.htpasswd:ro # для локальной разработки закомментировать
            #- /etc/letsencrypt:/etc/letsencrypt:ro # Добавляем сертификаты  # для локальной разработки закомментировать
        command: sh -c "envsubst '$$SERVER_IP $$ALLOWED_IP $$SITE_URL' < /etc/nginx/nginx.template.conf > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
        depends_on:
            backend:
                condition: service_started
            frontend:
                condition: service_started
        networks:
            - development
        healthcheck:
            test: ['CMD', 'nginx', '-t']
            interval: 10s
            timeout: 5s
            retries: 3

    frontend:
        image: ${DOCKERHUB_USERNAME}/dope-lyrics-frontend:latest
        ports: # для локальной разработки расскоментировать
            - '${FRONTEND_PORT}:${FRONTEND_PORT}'
        expose: # для локальной разработки закомментировать
            - ${FRONTEND_PORT} # Порт доступен только внутри Docker-сети
        networks:
            - development

    backend:
        image: ${DOCKERHUB_USERNAME}/dope-lyrics-backend:latest
        ports: # для локальной разработки расскоментировать
            - '${SERVER_PORT}:${SERVER_PORT}'
        depends_on:
            db:
                condition: service_healthy
        expose: # для локальной разработки закомментировать
            - ${SERVER_PORT} # Порт доступен только внутри Docker-сети
        networks:
            - development
        env_file:
            - ./server/.env

